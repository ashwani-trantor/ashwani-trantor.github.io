{"version":3,"sources":["components/Home.jsx","components/About.jsx","components/Contact.jsx","components/List.jsx","components/Form.jsx","js/actions/index.js","js/constants/action-types.js","App.js","serviceWorker.js","js/reducers/index.js","js/store/index.js","index.js"],"names":["Home","React","Component","About","Contact","redirectToAbout","props","history","push","onClick","List","connect","state","articles","className","map","el","key","id","title","ConnectedForm","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","addArticle","onSubmit","htmlFor","type","onChange","Form","dispatch","article","payload","App","exact","to","path","component","Boolean","window","location","hostname","match","initialState","rootReducer","action","Object","assign","concat","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cdb08ac3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return <h5>Home Component</h5>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return <h5>About Component</h5>;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nclass Contact extends React.Component {\r\n  redirectToAbout = () => {\r\n    this.props.history.push(\"/about\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h5>Contact Component</h5>\r\n        <button onClick={() => this.redirectToAbout()}>Click Me</button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { articles: state.articles };\r\n};\r\n\r\nconst ConnectedList = ({ articles }) => (\r\n  <ul className=\"article-list\">\r\n    {articles.map(el => (\r\n      <li key={el.id}>{el.title}</li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addArticle } from \"../js/actions/index\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addArticle: article => dispatch(addArticle(article))\r\n  };\r\n}\r\n\r\nclass ConnectedForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\"\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const { title } = this.state;\r\n    this.props.addArticle({ title });\r\n    this.setState({ title: \"\" });\r\n  }\r\n  render() {\r\n    const { title } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <br />\r\n        <button type=\"submit\">SAVE</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\r\n\r\nexport default Form;\r\n","import { ADD_ARTICLE } from \"../constants/action-types\";\r\n\r\nexport function addArticle(payload) {\r\n  return { type: ADD_ARTICLE, payload };\r\n}\r\n","export const ADD_ARTICLE = \"ADD_ARTICLE\";\r\n","import React from \"react\";\nimport {\n  MemoryRouter as Router,\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport List from \"./components/List\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <header className=\"App-header\">\n          <ul>\n            <li>\n              <NavLink exact to=\"/\">\n                Home\n              </NavLink>\n            </li>\n            <li>\n              <NavLink exact to=\"/about\">\n                About\n              </NavLink>\n            </li>\n            <li>\n              <NavLink exact to=\"/contact\">\n                Contact\n              </NavLink>\n            </li>\n            <li>\n              <NavLink exact to=\"/list\">\n                List of Articles\n              </NavLink>\n            </li>\n            <li>\n              <NavLink exact to=\"/new-article\">\n                New Article\n              </NavLink>\n            </li>\n          </ul>\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/contact\" exact component={Contact} />\n            <Route path=\"/list\" exact component={List} />\n            <Route path=\"/new-article\" exact component={Form} />\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_ARTICLE } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  articles: []\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_ARTICLE) {\r\n    return Object.assign({}, state, {\r\n      articles: state.articles.concat(action.payload)\r\n    });\r\n  }\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./js/store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}